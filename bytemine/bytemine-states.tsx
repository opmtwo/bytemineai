export enum BytemineStates {
	'AK' = 'AK',
	'AL' = 'AL',
	'AR' = 'AR',
	'AS' = 'AS',
	'AZ' = 'AZ',
	'CA' = 'CA',
	'CO' = 'CO',
	'CT' = 'CT',
	'DC' = 'DC',
	'DE' = 'DE',
	'FL' = 'FL',
	'GA' = 'GA',
	'GU' = 'GU',
	'HI' = 'HI',
	'IA' = 'IA',
	'ID' = 'ID',
	'IL' = 'IL',
	'IN' = 'IN',
	'KS' = 'KS',
	'KY' = 'KY',
	'LA' = 'LA',
	'MA' = 'MA',
	'MD' = 'MD',
	'ME' = 'ME',
	'MI' = 'MI',
	'MN' = 'MN',
	'MO' = 'MO',
	'MP' = 'MP',
	'MS' = 'MS',
	'MT' = 'MT',
	'NC' = 'NC',
	'ND' = 'ND',
	'NE' = 'NE',
	'NH' = 'NH',
	'NJ' = 'NJ',
	'NM' = 'NM',
	'NV' = 'NV',
	'NY' = 'NY',
	'OH' = 'OH',
	'OK' = 'OK',
	'OR' = 'OR',
	'PA' = 'PA',
	'RI' = 'RI',
	'SC' = 'SC',
	'SD' = 'SD',
	'TN' = 'TN',
	'TX' = 'TX',
	'UT' = 'UT',
	'VA' = 'VA',
	'VI' = 'VI',
	'VT' = 'VT',
	'WA' = 'WA',
	'WI' = 'WI',
	'WV' = 'WV',
	'WY' = 'WY',
}

export const BytemineStatesOptions = Object.entries(BytemineStates)
	.filter((type: [string, string]) => typeof type[0] === 'string')
	.map((type: [string, string]) => ({
		value: type[0],
		label: type[1],
	}));
